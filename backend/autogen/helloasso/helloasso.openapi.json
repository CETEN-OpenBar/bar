{
  "openapi": "3.0.1",
  "info": {
    "title": "HelloAsso API",
    "description": "HelloAsso auto-generated SDK",
    "version": "public"
  },
  "servers": [
    {
      "url": "https://api.helloasso.com/v5"
    }
  ],
  "paths": {
    "/organizations/{organizationSlug}/checkout-intents/{checkoutIntentId}": {
      "get": {
        "tags": [
          "Checkout"
        ],
        "summary": "Récupérer une intention de paiement",
        "description": "Retourne aussi la commande associée. Uniquement dans le cas ou le paiement est autorisé.<br/><br/><b>Votre clientId doit avoir ces autorisations : </b> <br/> Checkout<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkoutIntentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withFailedRefundOperation",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.CheckoutIntentResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.CheckoutIntentResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.CheckoutIntentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/checkout-intents": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "Initialisation d'un Checkout",
        "description": "Pour tout savoir sur Checkout consultez d'abord notre <a href=\"https://dev.helloasso.com/docs/description\">documentation</a><br/><br/><b>Votre clientId doit avoir ces autorisations : </b> <br/> Checkout<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.InitCheckoutBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.InitCheckoutBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.InitCheckoutBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.InitCheckoutBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.InitCheckoutResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.InitCheckoutResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.InitCheckoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/directory/forms": {
      "post": {
        "tags": [
          "Annuaire"
        ],
        "summary": "Récupérer les formulaires",
        "description": "Permet de récupérer une liste de tous les formulaires visibles correspondant à tous les filtres de l'annuaire jusqu'à ce qu'il soit synchronisé (en utilisant le continuationToken). Si aucun filtre n'est spécifié, aucun filtre n'est appliqué. Les résultats sont classés par date de mise à jour de la visibilité API en ordre croissant. Une fois la liste synchronisée, seuls les formulaires avec une date de mise à jour de la visibilité API supérieure à la dernière forme envoyée sont retournés (toujours en utilisant le continuationToken). Cela concerne les nouveaux formulaires à insérer (souhaitant apparaître de l'annuaire) ainsi que les anciens à supprimer (ne souhaitant plus apparaître dans l'annuaire). Le nombre total de résultats (ou de pages) n'est pas récupérable, donc les informations de pagination retournées indiqueront toujours -1.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> FormOpenDirectory<br/><br/>",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Body which contains the filters to apply",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.ListFormsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.ListFormsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.ListFormsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.ListFormsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_SynchronizableFormModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_SynchronizableFormModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_SynchronizableFormModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/directory/organizations": {
      "post": {
        "tags": [
          "Annuaire"
        ],
        "summary": "Récupérer les organisations",
        "description": "Permet de récupérer une liste de toutes les organisations visibles correspondant à tous les filtres de l'annuaire jusqu'à ce qu'il soit synchronisé (en utilisant le continuationToken). Si aucun filtre n'est spécifié, aucun filtre n'est appliqué. Les résultats sont classés par date de mise à jour de la visibilité API en ordre croissant. Une fois la liste synchronisée, seules les organisations avec une date de mise à jour de la visibilité API supérieure à la dernière organisation envoyée sont retournées (toujours en utilisant le continuationToken). Cela concerne les nouvelles organisations à insérer (souhaitant apparaître dans l'annuaire) ainsi que les anciennes à supprimer (ne souhaitant plus apparaître dans l'annuaire). Le nombre total de résultats (ou de pages) n'est pas récupérable, donc les informations de pagination retournées indiqueront toujours -1.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> OrganizationOpenDirectory<br/><br/>",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Body which contains the filters to apply",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.ListOrganizationsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.ListOrganizationsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.ListOrganizationsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.ListOrganizationsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_SynchronizableOrganizationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_SynchronizableOrganizationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_SynchronizableOrganizationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/forms/{formType}/action/quick-create": {
      "post": {
        "tags": [
          "Formulaires"
        ],
        "summary": "Créer un événement simplifié pour un organisme",
        "description": "Permet la création d'un événement avec seulement des informations limitées et quelques tarifications simples. L'événement créé de cette manière peut être modifié ultérieurement avec d'autres services<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> FormAdministration<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization Slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formType",
            "in": "path",
            "description": "The form type to create - only Event type is supported",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
            }
          }
        ],
        "requestBody": {
          "description": "The body of the request.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormQuickCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormQuickCreateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormQuickCreateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormQuickCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormQuickCreateModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormQuickCreateModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormQuickCreateModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/forms/{formType}/{formSlug}/public": {
      "get": {
        "tags": [
          "Formulaires"
        ],
        "summary": "Obtenir des données publiques détaillées sur un formulaire",
        "description": "Permet de récupérer toutes les informations publiques d'un formulaire, qu'il s'agisse de Crowdfunding, d'Adhésion, d'Événement, de Don...<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
            }
          },
          {
            "name": "formSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormPublicModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormPublicModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormPublicModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/formTypes": {
      "get": {
        "tags": [
          "Formulaires"
        ],
        "summary": "Obtenir une liste des types de formulaires pour une organisation",
        "description": "Liste tous les types de formulaires où l'organisation possède au moins un formulaire. Cela peut également être filtré par états.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization Slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "states",
            "in": "query",
            "description": "List of Form States to filter with. If none specified, it won't filter results.\n\nAvailable values:\n* `Public` - The form is publicly visible and findable on search engines\n* `Private` - The form is visible only with the URL, you cannot find it on search engines\n* `Draft` - The form is not yet published but visible if you have admin rights\n* `Disabled` - The form is disabled and can be reenabled by changing state to public or private",
            "schema": {
              "title": "List<FormState>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormState"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/forms": {
      "get": {
        "tags": [
          "Formulaires"
        ],
        "summary": "Obtenir les formulaires d'une organisation",
        "description": "Liste tous les formulaires correspondant aux états et types. Si aucun filtre n'est spécifié, aucun filtre n'est appliqué. Les résultats sont classés par date de création en ordre décroissant.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization Slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "states",
            "in": "query",
            "description": "States to filter\n\nAvailable values:\n* `Public` - The form is publicly visible and findable on search engines\n* `Private` - The form is visible only with the URL, you cannot find it on search engines\n* `Draft` - The form is not yet published but visible if you have admin rights\n* `Disabled` - The form is disabled and can be reenabled by changing state to public or private",
            "schema": {
              "title": "List<FormState>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormState"
              }
            }
          },
          {
            "name": "formTypes",
            "in": "query",
            "description": "Types to filter",
            "schema": {
              "title": "List<FormType>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
              }
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The page of results to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_FormLightModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_FormLightModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_FormLightModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/items/{itemId}": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "summary": "Obtenir le détail d'un article contenu dans une commande",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "The item ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withDetails",
            "in": "query",
            "description": "Set to true to return CustomFields and Options",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/forms/{formType}/{formSlug}/items": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "summary": "Obtenir une liste d'articles vendus dans un formulaire",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formSlug",
            "in": "path",
            "description": "The form slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formType",
            "in": "path",
            "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "First Date Filter",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End Date Filter (exclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "userSearchKey",
            "in": "query",
            "description": "Filter results on user or payer first name, last name or email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The page of results to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tierTypes",
            "in": "query",
            "description": "The type of tiers",
            "schema": {
              "title": "List<TierType>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.TierType"
              }
            }
          },
          {
            "name": "itemStates",
            "in": "query",
            "description": "The item states\n\nAvailable values:\n* `Processed` - The item is paid and is valid\n* `Registered` - The item has been registered manually by the organization and is valid\n* `Unknown`\n* `Canceled` - The item has been canceled, and is no longer valid",
            "schema": {
              "title": "List<ItemState>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.ItemState"
              }
            }
          },
          {
            "name": "tierName",
            "in": "query",
            "description": "The name of a tier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withDetails",
            "in": "query",
            "description": "Set to true to return CustomFields and Options",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort forms items by ascending or descending order. Default is descending",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortOrder"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort forms items by a specific field (Date or UpdateDate). Default is date",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortField"
            }
          },
          {
            "name": "withCount",
            "in": "query",
            "description": "Whether the pagination should include totalCount and totalPages.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {}
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`",
            "content": {
              "application/json": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {}
            }
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action",
            "content": {
              "application/json": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {}
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/items": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "summary": "Obtenir une liste d'articles vendus par une organisation",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "First Date Filter",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End Date Filter (exclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "userSearchKey",
            "in": "query",
            "description": "Filter results on user or payer first name, last name or email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The page of results to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tierTypes",
            "in": "query",
            "description": "The type of tiers Donation, Payment, Registration, Membership, MonthlyDonation, MonthlyPayment, OfflineDonation, Contribution, Bonus",
            "schema": {
              "title": "List<TierType>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.TierType"
              }
            }
          },
          {
            "name": "itemStates",
            "in": "query",
            "description": "The item states\n\nAvailable values:\n* `Processed` - The item is paid and is valid\n* `Registered` - The item has been registered manually by the organization and is valid\n* `Unknown`\n* `Canceled` - The item has been canceled, and is no longer valid",
            "schema": {
              "title": "List<ItemState>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.ItemState"
              }
            }
          },
          {
            "name": "tierName",
            "in": "query",
            "description": "The name of a tier",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withDetails",
            "in": "query",
            "description": "Set to true to return CustomFields and Options",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort organizations items by ascending or descending order. Default is descending",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortOrder"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort organizations items by a specific field (Date or UpdateDate). Default is date",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortField"
            }
          },
          {
            "name": "withCount",
            "in": "query",
            "description": "Whether the pagination should include totalCount and totalPages.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {}
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`",
            "content": {
              "application/json": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {}
            }
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action",
            "content": {
              "application/json": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {}
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/orders/{orderId}": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "summary": "Obtenir des informations détaillées sur une commande",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/forms/{formType}/{formSlug}/orders": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "summary": "Obtenir les commandes d'un formulaire",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formSlug",
            "in": "path",
            "description": "The form slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formType",
            "in": "path",
            "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "First Date Filter",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End Date Filter (exclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "userSearchKey",
            "in": "query",
            "description": "Filter results on user or payer first name, last name or email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The page of results to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withDetails",
            "in": "query",
            "description": "Set to true to return CustomFields",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort forms orders by ascending or descending order. Default is descending",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortOrder"
            }
          },
          {
            "name": "withCount",
            "in": "query",
            "description": "Whether the pagination should include totalCount and totalPages.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_Order"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/orders": {
      "get": {
        "tags": [
          "Commandes"
        ],
        "summary": "Obtenir les commandes d'une organisation",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "First Date Filter",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End Date Filter (exclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "userSearchKey",
            "in": "query",
            "description": "Filter results on user or payer first name, last name or email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The page of results to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formTypes",
            "in": "query",
            "description": "The type of the form CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
            "schema": {
              "title": "List<FormType>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
              }
            }
          },
          {
            "name": "withDetails",
            "in": "query",
            "description": "Set to true to return CustomFields",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort organizations orders by ascending or descending order. Default is descending",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortOrder"
            }
          },
          {
            "name": "withCount",
            "in": "query",
            "description": "Whether the pagination should include totalCount and totalPages.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_Order"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_Order"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/orders/{orderId}/cancel": {
      "post": {
        "tags": [
          "Commandes"
        ],
        "summary": "Annuler les paiements futurs pour une commande (pas de remboursement).",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/>FormAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> RefundManagement<br/><br/>",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/legal-informations/legal-structures": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Obtenir la structure juridique d'une organisation visible.",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> OrganizationAdministration<br/><br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "List<OrganizationLegalStructuresModel>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.OrganizationLegalStructuresModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "List<OrganizationLegalStructuresModel>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.OrganizationLegalStructuresModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "List<OrganizationLegalStructuresModel>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.OrganizationLegalStructuresModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/legal-informations/tax-information-texts": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Obtenir les textes d'information fiscale de l'organisation.",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> OrganizationAdministration<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "title": "List<TaxInformationText>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Models.Accounts.OrganizationLegalInformations.TaxInformationText"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "title": "List<TaxInformationText>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Models.Accounts.OrganizationLegalInformations.TaxInformationText"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "title": "List<TaxInformationText>",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Models.Accounts.OrganizationLegalInformations.TaxInformationText"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/legal-informations/{organizationSlug}/configuration": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Obtenir la configuration des informations juridiques de l'organisation.",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> OrganizationAdministration<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Models.Accounts.OrganizationLegalInformations.OrganizationLegalInformationConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Models.Accounts.OrganizationLegalInformations.OrganizationLegalInformationConfiguration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Models.Accounts.OrganizationLegalInformations.OrganizationLegalInformationConfiguration"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "put": {
        "tags": [
          "Organisation"
        ],
        "summary": "Mettre à jour la configuration des informations juridiques de l'organisation.",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> OrganizationAdministration<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationLegalInformationConfigurationBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationLegalInformationConfigurationBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationLegalInformationConfigurationBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationLegalInformationConfigurationBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "summary": "Obtenir le détail d'une organisation",
        "description": "Obtenir les informations publiques de l'organisation spécifiée.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization Slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Organization.OrganizationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Organization.OrganizationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Organization.OrganizationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/partners/me/api-clients": {
      "put": {
        "tags": [
          "Partenaires"
        ],
        "summary": "Mise à jour du domaine",
        "description": "<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Accounts.Clients.PublicPutApiClientRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Accounts.Clients.PublicPutApiClientRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Accounts.Clients.PublicPutApiClientRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Accounts.Clients.PublicPutApiClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/partners/me/api-notifications/organizations/{organizationSlug}": {
      "put": {
        "tags": [
          "Partenaires"
        ],
        "summary": "Mise à jour d'une URL de notification liée à une organisation",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The body of the request, do not specify a notification type to update the main notification Url",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Partenaires"
        ],
        "summary": "Suppression d'une URL de notification liée à une organisation",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationType",
            "in": "query",
            "description": "Do not specify a notification type to remove the main notification Url",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiNotificationType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/partners/me/api-notifications": {
      "put": {
        "tags": [
          "Partenaires"
        ],
        "summary": "Mise à jour de l'URL de notification principale",
        "description": "<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "requestBody": {
          "description": "The body of the request, do not specify a notification type to update the main notification Url",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Partenaires"
        ],
        "summary": "Suppression de l'URL de notification principale",
        "description": "<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "parameters": [
          {
            "name": "notificationType",
            "in": "query",
            "description": "Do not specify a notification type to remove the main notification Url",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiNotificationType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/partners/me": {
      "get": {
        "tags": [
          "Partenaires"
        ],
        "summary": "Récupération des informations",
        "description": "<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Partners.PartnerPublicModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Partners.PartnerPublicModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Partners.PartnerPublicModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/partners/me/organizations": {
      "get": {
        "tags": [
          "Partenaires"
        ],
        "summary": "Obtenir toutes les organisations",
        "description": "Liste toutes les organisations liées au partenaire. Les résultats sont classés par date de mise à jour de la visibilité API en ordre croissant. Le nombre total de résultats (ou de pages) n'est pas récupérable, donc les informations de pagination retournées indiqueront toujours -1.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_PartnerOrganizationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_PartnerOrganizationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_PartnerOrganizationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/payments/{paymentId}": {
      "get": {
        "tags": [
          "Paiements"
        ],
        "summary": "Obtenir les informations détaillées d'un paiement.",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "The payment identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "withFailedRefundOperation",
            "in": "query",
            "description": "True to retrieve the refund operation in the states 'ABORTED', 'CANCELED', 'ERROR', 'REFUSED'.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.PaymentDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.PaymentDetail"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.PaymentDetail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/forms/{formType}/{formSlug}/payments": {
      "get": {
        "tags": [
          "Paiements"
        ],
        "summary": "Obtenir les informations des paiements effectués sur un formulaire",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>FormAdmin<br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formSlug",
            "in": "path",
            "description": "The form slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formType",
            "in": "path",
            "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "First Date Filter",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End Date Filter (exclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "userSearchKey",
            "in": "query",
            "description": "Filter results on user or payer first name, last name or email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The page of results to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "states",
            "in": "query",
            "description": "Filter results by states of payments\n\nAvailable values:\n* `Pending` - A payment scheduled at a later date, not yet processed.\n* `Authorized` - The payment has been authorized, validated, processed.\n* `Refused` - The payment has been refused by the bank.\n* `Unknown`\n* `Registered` - Represents a payment made offline.\r\n            Probably for an item of type\n* `Refunded` - The payment has been refunded.\n* `Refunding` - The payment is being refunded.\n* `Contested` - Payment has been contested by the contributor",
            "schema": {
              "title": "List<PaymentState>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentState"
              }
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort payments by ascending or descending order. Default is descending",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortOrder"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort payments by a specific field (Date or UpdateDate). Default is date",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortField"
            }
          },
          {
            "name": "withCount",
            "in": "query",
            "description": "Whether the pagination should include totalCount and totalPages.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_Payment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_Payment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/payments": {
      "get": {
        "tags": [
          "Paiements"
        ],
        "summary": "Obtenir les informations des paiements effectués sur une organisation",
        "description": "Retourne la liste des paiements selon les paramètres<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessTransactions<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization Slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "First Date Filter",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End Date Filter (exclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "userSearchKey",
            "in": "query",
            "description": "Filter results on user or payer first name, last name or email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "The page of results to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "states",
            "in": "query",
            "description": "The payment states\n\nAvailable values:\n* `Pending` - A payment scheduled at a later date, not yet processed.\n* `Authorized` - The payment has been authorized, validated, processed.\n* `Refused` - The payment has been refused by the bank.\n* `Unknown`\n* `Registered` - Represents a payment made offline.\r\n            Probably for an item of type\n* `Refunded` - The payment has been refunded.\n* `Refunding` - The payment is being refunded.\n* `Contested` - Payment has been contested by the contributor",
            "schema": {
              "title": "List<PaymentState>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentState"
              }
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort payments by ascending or descending order. Default is descending",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortOrder"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort payments by a specific field (Date or UpdateDate). Default is date",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortField"
            }
          },
          {
            "name": "withCount",
            "in": "query",
            "description": "Whether the pagination should include totalCount and totalPages.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {}
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`",
            "content": {
              "application/json": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {}
            }
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action",
            "content": {
              "application/json": {},
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "text/csv": {}
            }
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/payments/{paymentId}/refund": {
      "post": {
        "tags": [
          "Paiements"
        ],
        "summary": "Rembourser un paiement.",
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/>FormAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> RefundManagement<br/><br/>",
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "description": "The payment identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "description": "The comment about this refund.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cancelOrder",
            "in": "query",
            "description": "Whether the future payments and linked items of this order must be canceled (possible only if the payment is fully refunded)",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "sendRefundMail",
            "in": "query",
            "description": "Whether a refund mail must be sent or not.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "The amount in cents to refund. Enter this amount only for a partial refund for stripe. If not filled in then the entire payment is refunded",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Payment.RefundOperationModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Payment.RefundOperationModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Payment.RefundOperationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/payments/search": {
      "get": {
        "tags": [
          "Paiements"
        ],
        "summary": "Rechercher des paiements.",
        "description": "<p>Attention : Le compte total est désactivé, nous retournons la liste des paiements et le continuationToken. </p><p>Recherchez des paiements basés sur de nombreux critères La recherche doit utiliser au moins l'un des paramètres suivants : </p><ul><li>ID de l'organisation : paiements effectués pour cette organisation </li><li>Formulaire : Paiements effectués par ce formulaire en utilisant le couple ID du formulaire et type du formulaire </li><li>ID de l'utilisateur : Paiements effectués par cet utilisateur </li><li>États : Une liste d'états de paiement à filtrer. (si vide, tous les paiements seront retournés)</li><li>Plage de dates : En utilisant du et/ou au </li><li>Requête de recherche : Une liste de mots qui doivent être contenus soit sur les noms des payeurs ou des utilisateurs ou l'email </li><li>Montant du paiement : En centimes, qui doit exactement correspondre au montant des paiements (avec ou sans la contribution) </li></ul><p>L'ordre des résultats est également personnalisable : </p><ul><li>Le champ de tri peut être la date, la date de mise à jour ou la date de création </li><li>L'ordre peut être ascendant ou descendant<br><br><b>Votre token doit avoir l'un de ces rôles : </b><br>OrganizationAdmin<br><br>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br><br><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br> AccessTransactions<br><br></li></ul>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "description": "The organization slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "First Date Filter",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End Date Filter (exclusive)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Continuation Token from which we wish to retrieve results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formTypes",
            "in": "query",
            "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop",
            "schema": {
              "title": "List<FormType>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
              }
            }
          },
          {
            "name": "formType",
            "in": "query",
            "description": "The form type CrowdFunding, Membership, Event, Donation, PaymentForm, Checkout, Shop. This parameter must be used with the parameter formId.",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
            }
          },
          {
            "name": "states",
            "in": "query",
            "description": "Filter results by states of payments\n\nAvailable values:\n* `Pending` - A payment scheduled at a later date, not yet processed.\n* `Authorized` - The payment has been authorized, validated, processed.\n* `Refused` - The payment has been refused by the bank.\n* `Unknown`\n* `Registered` - Represents a payment made offline.\r\n            Probably for an item of type\n* `Refunded` - The payment has been refunded.\n* `Refunding` - The payment is being refunded.\n* `Contested` - Payment has been contested by the contributor",
            "schema": {
              "title": "List<PaymentState>",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentState"
              }
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The User identifier",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "Filter results on user or payer first name, last name or email.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "Amount of the payment in cents. Filter payments with exact amount with or without the contribution.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort payments by ascending or descending order. Default is descending",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortOrder"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort payments by a specific field (Date or UpdateDate). Default is date",
            "schema": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.SortField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_PublicPaymentModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_PublicPaymentModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultsWithPaginationModel_PublicPaymentModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/tags/{tagName}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Obtenir le détail d'un tag interne",
        "description": "<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> FormOpenDirectory<br/><br/>",
        "parameters": [
          {
            "name": "tagName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withCount",
            "in": "query",
            "description": "If true : Count of times Tag is used",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "withAmount",
            "in": "query",
            "description": "If true : Amount collected by all forms linked to this Tag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Tags.InternalTagModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Tags.InternalTagModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Tags.InternalTagModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/tax-receipt/fiscal-receipt-transmitter": {
      "put": {
        "tags": [
          "Reçus fiscaux"
        ],
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/>FormAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> RefundManagement<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationFiscalReceiptTransmitterBody"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationFiscalReceiptTransmitterBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationFiscalReceiptTransmitterBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationFiscalReceiptTransmitterBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Mettre à jour l'émetteur des reçus fiscaux",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/tax-receipt/configuration": {
      "get": {
        "tags": [
          "Reçus fiscaux"
        ],
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/>FormAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> RefundManagement<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Core.Accounts.TaxReceipts.OrganizationFiscalReceiptOptionsConfiguration"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Core.Accounts.TaxReceipts.OrganizationFiscalReceiptOptionsConfiguration"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloAsso.Core.Accounts.TaxReceipts.OrganizationFiscalReceiptOptionsConfiguration"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "summary": "Obtenir la configuration des reçus fiscaux",
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "put": {
        "tags": [
          "Reçus fiscaux"
        ],
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/>FormAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> RefundManagement<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file",
            "in": "query",
            "description": "Upload File",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "config",
            "in": "query",
            "description": "config",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          },
          "404": {
            "description": "Not Found"
          },
          "415": {
            "description": "Client Error"
          }
        },
        "summary": "Mettre à jour la configuration des reçus fiscaux",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/organizations/{organizationSlug}/tax-receipt/preview": {
      "post": {
        "tags": [
          "Reçus fiscaux"
        ],
        "description": "<br/><br/><b>Votre token doit avoir l'un de ces rôles : </b><br/>OrganizationAdmin<br/>FormAdmin<br/><br/>Si vous êtes une <b>association</b>, vous pouvez obtenir ces rôles avec votre client.<br/>Si vous êtes un <b>partenaire</b>, vous pouvez obtenir ces rôles par le flux d'autorisation.<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> RefundManagement<br/><br/>",
        "parameters": [
          {
            "name": "organizationSlug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file",
            "in": "query",
            "description": "Upload File",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "config",
            "in": "query",
            "description": "config",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          },
          "415": {
            "description": "Client Error"
          }
        },
        "summary": "Prévisualiser les reçus fiscaux",
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/users/me/organizations": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Obtenir mes organisations",
        "description": "Renvoie la liste des organisations où l'utilisateur connecté a des droits<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Organization.OrganizationLightModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Organization.OrganizationLightModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Organization.OrganizationLightModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/values/organization/categories": {
      "get": {
        "tags": [
          "Liste de valeurs"
        ],
        "summary": "Obtenir la liste des catégories du JO",
        "description": "Utilisez ceci afin de construire votre liste de catégories d'organisation<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Account.OrganismCategoryModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Account.OrganismCategoryModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Account.OrganismCategoryModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/values/tags": {
      "get": {
        "tags": [
          "Liste de valeurs"
        ],
        "summary": "Obtenir la liste des tags publiques",
        "description": "Utilisez ceci afin de récupérer la liste des étiquettes utilisées<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Tags.PublicTagModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Tags.PublicTagModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Tags.PublicTagModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/values/company-legal-status": {
      "get": {
        "tags": [
          "Liste de valeurs"
        ],
        "summary": "Obtenir la liste des statuts juridiques",
        "description": "<br/><br/><b>Votre clientId doit être autorisé à tous ces privilèges : </b> <br/> AccessPublicData<br/><br/>",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Account.CompanyLegalStatusModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Account.CompanyLegalStatusModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Account.CompanyLegalStatusModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, you must add a valid JWT into Authorization Header with the format : `Bearer TOKEN`"
          },
          "403": {
            "description": "The JWT token hasn't the privileges or Roles for this action"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "HaTrust.Contract.LegalInformation.Address.AddressDto": {
        "type": "object",
        "properties": {
          "line": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "countryAlpha3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Account.CompanyLegalStatusModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Company legal status id",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "description": "Company legal status label",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "user/payer company legal status"
      },
      "HelloAsso.Api.V5.Models.Account.OrganismCategoryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "shortLabel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Accounts.Clients.ApiClientModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "description": "Filled only when requested by the organization back office",
            "nullable": true
          },
          "partnerName": {
            "type": "string",
            "nullable": true
          },
          "privileges": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Accounts.Clients.PublicPutApiClientRequest": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Client domain : Url used to grant authorization redirection",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.ApiNotifications.ApiNotificationType": {
        "enum": [
          "Payment",
          "Order",
          "Form",
          "Organization"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The notification Url",
            "nullable": true
          },
          "apiNotificationType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiNotificationType"
          },
          "signatureKey": {
            "type": "string",
            "description": "Signature Key : allows you to verify the authenticity of notifications",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Organization notification URL Model class"
      },
      "HelloAsso.Api.V5.Models.ApiNotifications.PostApiUrlNotificationBody": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string",
            "description": "The Api notification Url"
          },
          "notificationType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiNotificationType"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Carts.CheckoutIntentResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "description": "Metadata (Json object)\r\nOnly if metadata were sent on the checkout form initialization",
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderDetail"
          },
          "id": {
            "type": "integer",
            "description": "Id of the checkout intent",
            "format": "int32"
          },
          "redirectUrl": {
            "type": "string",
            "description": "Url where the contributor must be redirected to",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Carts.CheckoutPayer": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 255,
            "type": "string",
            "description": "FirstName",
            "nullable": true
          },
          "lastName": {
            "maxLength": 255,
            "type": "string",
            "description": "LastName",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Date of birth (Date only, no time part)",
            "format": "date-time",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode",
            "nullable": true
          },
          "country": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "3 letter country code",
            "nullable": true
          },
          "companyName": {
            "maxLength": 255,
            "type": "string",
            "description": "Used if the payer is a company",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Carts.CheckoutTerm": {
        "required": [
          "amount",
          "date"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Term amount, all taxes included, in cents",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "description": "Term date",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Carts.InitCheckoutBody": {
        "required": [
          "backUrl",
          "containsDonation",
          "errorUrl",
          "initialAmount",
          "itemName",
          "returnUrl",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "totalAmount": {
            "type": "integer",
            "description": "Total amount, all taxes included, in cents (required)\r\nMust be equal to the sum of the initial amount and subsequent terms",
            "format": "int32"
          },
          "initialAmount": {
            "type": "integer",
            "description": "The amount for the first term, all taxes included, in cents (required)",
            "format": "int32"
          },
          "itemName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Item name (required)\r\nA text describing what the user paid for ('Renew license', '3 tickets', donation, etc).\r\nWill be displayed in the near future in the user space and in the organization back office"
          },
          "backUrl": {
            "minLength": 1,
            "type": "string",
            "description": "Url followed by the contributor if he wants to return to its previous site"
          },
          "errorUrl": {
            "minLength": 1,
            "type": "string",
            "description": "Url called in case of an error during the checkout process"
          },
          "returnUrl": {
            "minLength": 1,
            "type": "string",
            "description": "Url called after the payment"
          },
          "containsDonation": {
            "type": "boolean",
            "description": "The sale (or a part of) is a donation"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.CheckoutTerm"
            },
            "description": "The list of future terms (if applicable)",
            "nullable": true
          },
          "payer": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Carts.CheckoutPayer"
          },
          "metadata": {
            "description": "Metadata (optional)\r\nJson object (max length : 20000)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Carts.InitCheckoutResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the checkout intent",
            "format": "int32"
          },
          "redirectUrl": {
            "type": "string",
            "description": "Url where the contributor must be redirected to",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Common.ContactModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Contact email",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Contact phone number",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Contact class"
      },
      "HelloAsso.Api.V5.Models.Common.DocumentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "The file name of document",
            "nullable": true
          },
          "publicUrl": {
            "type": "string",
            "description": "The public url of document",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DocumentModel class"
      },
      "HelloAsso.Api.V5.Models.Common.MetaModel": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "description": "CreatedAt",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "UpdateAt",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "MetaModel class"
      },
      "HelloAsso.Api.V5.Models.Common.PaginationModel": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of results available",
            "format": "int32"
          },
          "pageIndex": {
            "type": "integer",
            "description": "Current page index",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages of results with current page size",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Continuation Token to get next results",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Pagination model class"
      },
      "HelloAsso.Api.V5.Models.Common.PlaceModel": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Address",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the place",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "ZipCode",
            "nullable": true
          },
          "country": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "3 letter country code",
            "nullable": true
          },
          "geoLocation": {
            "$ref": "#/components/schemas/HelloAsso.Models.Shared.GeoLocation"
          }
        },
        "additionalProperties": false,
        "description": "PlaceModel class"
      },
      "ResultsWithPaginationModel_PartnerOrganizationModel": {
        "title": "ResultsWithPaginationModel<PartnerOrganizationModel>",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.PartnerOrganizationModel"
            },
            "description": "Data property",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PaginationModel"
          }
        },
        "additionalProperties": false,
        "description": "ResultsWithPaginationModel class"
      },
      "ResultsWithPaginationModel_SynchronizableFormModel": {
        "title": "ResultsWithPaginationModel<SynchronizableFormModel>",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.SynchronizableFormModel"
            },
            "description": "Data property",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PaginationModel"
          }
        },
        "additionalProperties": false,
        "description": "ResultsWithPaginationModel class"
      },
      "ResultsWithPaginationModel_SynchronizableOrganizationModel": {
        "title": "ResultsWithPaginationModel<SynchronizableOrganizationModel>",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.SynchronizableOrganizationModel"
            },
            "description": "Data property",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PaginationModel"
          }
        },
        "additionalProperties": false,
        "description": "ResultsWithPaginationModel class"
      },
      "ResultsWithPaginationModel_FormLightModel": {
        "title": "ResultsWithPaginationModel<FormLightModel>",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormLightModel"
            },
            "description": "Data property",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PaginationModel"
          }
        },
        "additionalProperties": false,
        "description": "ResultsWithPaginationModel class"
      },
      "ResultsWithPaginationModel_PublicPaymentModel": {
        "title": "ResultsWithPaginationModel<PublicPaymentModel>",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Payment.PublicPaymentModel"
            },
            "description": "Data property",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PaginationModel"
          }
        },
        "additionalProperties": false,
        "description": "ResultsWithPaginationModel class"
      },
      "ResultsWithPaginationModel_Item": {
        "title": "ResultsWithPaginationModel<Item>",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.Item"
            },
            "description": "Data property",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PaginationModel"
          }
        },
        "additionalProperties": false,
        "description": "ResultsWithPaginationModel class"
      },
      "ResultsWithPaginationModel_Order": {
        "title": "ResultsWithPaginationModel<Order>",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.Order"
            },
            "description": "Data property",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PaginationModel"
          }
        },
        "additionalProperties": false,
        "description": "ResultsWithPaginationModel class"
      },
      "ResultsWithPaginationModel_Payment": {
        "title": "ResultsWithPaginationModel<Payment>",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.Payment"
            },
            "description": "Data property",
            "nullable": true
          },
          "pagination": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PaginationModel"
          }
        },
        "additionalProperties": false,
        "description": "ResultsWithPaginationModel class"
      },
      "HelloAsso.Api.V5.Models.Directory.DirectoryOrganizationPublicModel": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The public tags of the organization",
            "nullable": true
          },
          "linkedPartners": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Partners linked to this organization",
            "nullable": true
          },
          "isAuthenticated": {
            "type": "boolean",
            "description": "The organization is authenticated. Property returned only when asked by an organization admin.",
            "nullable": true
          },
          "isCashInCompliant": {
            "type": "boolean",
            "description": "If transaction can be init on the organization or not.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "The organization banner",
            "nullable": true
          },
          "fiscalReceiptEligibility": {
            "type": "boolean",
            "description": "The organism can issue fiscal receipts (type ok and has not deactivated it)\r\nMust configure it and be authenticated to become enabled"
          },
          "fiscalReceiptIssuanceEnabled": {
            "type": "boolean",
            "description": "The organism is eligible, has set up his options, and is authenticated."
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.OrganizationType"
          },
          "category": {
            "type": "string",
            "description": "Organization category label",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Organization Address (for authorized applications or if authorized by the organization)",
            "nullable": true
          },
          "geolocation": {
            "$ref": "#/components/schemas/HelloAsso.Models.Shared.GeoLocation"
          },
          "rnaNumber": {
            "type": "string",
            "description": "Unique identifier assigned when creating the association",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "description": "Logo of organization",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of organization",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/HelloAsso.Models.Enums.GlobalRole"
          },
          "city": {
            "type": "string",
            "description": "Organization city",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Organization zip code",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Organization description",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "description": "Last update date of the organization",
            "format": "date-time"
          },
          "categoryJoId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The organization url",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "The organization slug",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "DirectoryOrganizationPublicModel class"
      },
      "HelloAsso.Api.V5.Models.Directory.ListFormsRequest": {
        "type": "object",
        "properties": {
          "formName": {
            "type": "string",
            "description": "Textual search for form name",
            "nullable": true
          },
          "formDescription": {
            "type": "string",
            "description": "Textual search for form description",
            "nullable": true
          },
          "formZipCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The zip codes where the forms are located",
            "nullable": true
          },
          "formCities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The cities where the forms are located",
            "nullable": true
          },
          "formRegions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The regions where the forms are located",
            "nullable": true
          },
          "formDepartments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The departments where the forms are located",
            "nullable": true
          },
          "formCountries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The countries where the forms are located",
            "nullable": true
          },
          "formTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
            },
            "description": "The form types : CrowdFunding, Membership, Event, Donation, PaymentForm ...",
            "nullable": true
          },
          "formActivityType": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The Activity Type of the form",
            "nullable": true
          },
          "formPublicationStartDateMin": {
            "type": "string",
            "description": "The inclusive minimum publication date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"",
            "format": "date-time",
            "nullable": true
          },
          "formPublicationStartDateMax": {
            "type": "string",
            "description": "The exclusive maximum publication date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"",
            "format": "date-time",
            "nullable": true
          },
          "formStartDateMin": {
            "type": "string",
            "description": "The inclusive minimum start date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"",
            "format": "date-time",
            "nullable": true
          },
          "formStartDateMax": {
            "type": "string",
            "description": "The exclusive maximum start date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"",
            "format": "date-time",
            "nullable": true
          },
          "formEndDateMax": {
            "type": "string",
            "description": "The exclusive maximum end date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"",
            "format": "date-time",
            "nullable": true
          },
          "formEndDateMin": {
            "type": "string",
            "description": "The inclusive minimum end date of the forms, format \"yyyy-MM-ddTHH:mm:ss.fffK\"",
            "format": "date-time",
            "nullable": true
          },
          "formIsFree": {
            "type": "boolean",
            "description": "Allow only free forms if true",
            "nullable": true
          },
          "formHasRemainingEntries": {
            "type": "boolean",
            "description": "Allow only forms with remaning entries if true",
            "nullable": true
          },
          "formInternalTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allow only forms with internal tags\r\nthis filter is for special operations only",
            "nullable": true
          },
          "formPublicTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allow only forms with public tags",
            "nullable": true
          },
          "organizationName": {
            "type": "string",
            "description": "Textual search for organization name",
            "nullable": true
          },
          "organizationDescription": {
            "type": "string",
            "description": "Textual search for organization description",
            "nullable": true
          },
          "organizationCategories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The categories of the forms",
            "nullable": true
          },
          "organizationTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The organization types",
            "nullable": true
          },
          "organizationZipCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The zip codes where the organizations are located",
            "nullable": true
          },
          "organizationCities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The cities where the organizations are located",
            "nullable": true
          },
          "organizationRegions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The regions where the organizations are located",
            "nullable": true
          },
          "organizationDepartments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The departments where the organizations are located",
            "nullable": true
          },
          "organizationFiscalReceiptEligibility": {
            "type": "boolean",
            "description": "Allow only organization with a fiscal receipt eligibility",
            "nullable": true
          },
          "organizationLinkedPartners": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Organization linked partners",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Directory.ListOrganizationsRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Textual search for organization name",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Textual search for organization description",
            "nullable": true
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The categories of the organizations",
            "nullable": true
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The organization types",
            "nullable": true
          },
          "zipCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The zip codes where the organizations are located",
            "nullable": true
          },
          "cities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The cities where the organizations are located",
            "nullable": true
          },
          "regions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The regions where the organizations are located",
            "nullable": true
          },
          "departments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The departments where the organizations are located",
            "nullable": true
          },
          "fiscalReceiptEligibility": {
            "type": "boolean",
            "description": "Allow only organization with a fiscal receipt eligibility",
            "nullable": true
          },
          "internalTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allow only Organization with internal tags\r\nthis filter is for special operations only",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allow only Organization with public tags",
            "nullable": true
          },
          "linkedPartners": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Allow only Organization with linked partners",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Directory.PartnerOrganizationModel": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Directory.DirectoryOrganizationPublicModel"
          },
          "availableAccessToken": {
            "type": "boolean",
            "description": "True if exist a valid organization access token obtained by authorize flow"
          }
        },
        "additionalProperties": false,
        "description": "PartnerOrganizationModel class"
      },
      "HelloAsso.Api.V5.Models.Directory.SynchronizableFormModel": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.RecordActionType"
          },
          "record": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.FormBasicModel"
          }
        },
        "additionalProperties": false,
        "description": "SynchronizableFormModel class"
      },
      "HelloAsso.Api.V5.Models.Directory.SynchronizableOrganizationModel": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.RecordActionType"
          },
          "record": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Organization.OrganizationBasicModel"
          }
        },
        "additionalProperties": false,
        "description": "SynchronizableOrganizationModel class"
      },
      "HelloAsso.Api.V5.Models.Enums.FieldType": {
        "enum": [
          "Date",
          "TextInput",
          "FreeText",
          "ChoiceList",
          "File",
          "YesNo",
          "Phone",
          "Zipcode",
          "Number"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.FormState": {
        "enum": [
          "Public",
          "Private",
          "Draft",
          "Deleted",
          "Disabled"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.FormType": {
        "enum": [
          "CrowdFunding",
          "Membership",
          "Event",
          "Donation",
          "PaymentForm",
          "Checkout",
          "Shop"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.ItemState": {
        "enum": [
          "Waiting",
          "Processed",
          "Registered",
          "Deleted",
          "Refunded",
          "Unknown",
          "Canceled",
          "Contested",
          "Unknow",
          "Refused",
          "Abandoned"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.MembershipValidityType": {
        "enum": [
          "MovingYear",
          "Custom",
          "Illimited"
        ],
        "type": "string",
        "description": "Enum which represents the membership validity type"
      },
      "HelloAsso.Api.V5.Models.Enums.OperationState": {
        "enum": [
          "Unknown",
          "Init",
          "Processing",
          "Processed",
          "Error",
          "InternalError",
          "Refused",
          "Aborted",
          "Canceled"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.OrganizationType": {
        "enum": [
          "Association1901Rig",
          "Association1901Rup",
          "Association1901",
          "FondationRup",
          "FondDotation",
          "FondationSousEgide",
          "FondationScientifique",
          "FondationPartenariale",
          "FondationUniversitaire",
          "FondationHospitaliere",
          "Association1905",
          "Association1905Rup",
          "Entreprise",
          "Cooperative",
          "Etablissement",
          "Association1908",
          "Association1908Rig",
          "Association1908Rup",
          "AssociationMilitaire",
          "AssociationProprietaire",
          "Collectivités",
          "ComiteEntreprise",
          "CSE",
          "FabriqueEglise",
          "FondsPerenite",
          "GIE",
          "GIP",
          "MenseCuriale",
          "SCIC",
          "SCOP",
          "Autres"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.PaymentCashOutState": {
        "enum": [
          "MoneyIn",
          "CantTransferReceiverFull",
          "Transfered",
          "Refunded",
          "Refunding",
          "WaitingForCashOutConfirmation",
          "CashedOut",
          "Unknown",
          "Contested",
          "TransferInProgress"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.PaymentFrequencyType": {
        "enum": [
          "Single",
          "Installment",
          "Monthly"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.PaymentMeans": {
        "enum": [
          "None",
          "Card",
          "Sepa",
          "Check",
          "Cash",
          "BankTransfer",
          "Other"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.PaymentProviderType": {
        "enum": [
          "Lemonway",
          "Stripe",
          "StripeV2",
          "HaPay"
        ],
        "type": "string",
        "description": "The payment provider type."
      },
      "HelloAsso.Api.V5.Models.Enums.PaymentState": {
        "enum": [
          "Pending",
          "Authorized",
          "Refused",
          "Unknown",
          "Registered",
          "Error",
          "Refunded",
          "Refunding",
          "Waiting",
          "Canceled",
          "Contested",
          "WaitingBankValidation",
          "WaitingBankWithdraw",
          "Abandoned",
          "WaitingAuthentication",
          "AuthorizedPreprod",
          "Corrected",
          "Deleted",
          "Inconsistent",
          "NoDonation",
          "Init"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.PaymentType": {
        "enum": [
          "Offline",
          "Credit",
          "Debit"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.PriceCategory": {
        "enum": [
          "Fixed",
          "Pwyw",
          "Free"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.RecordActionType": {
        "enum": [
          "Insert",
          "Delete"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.SortField": {
        "enum": [
          "Date",
          "UpdateDate",
          "CreationDate"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.SortOrder": {
        "enum": [
          "Asc",
          "Desc"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.TagType": {
        "enum": [
          "Explore",
          "Internal"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Enums.TierType": {
        "enum": [
          "Donation",
          "Payment",
          "Registration",
          "Membership",
          "MonthlyDonation",
          "MonthlyPayment",
          "OfflineDonation",
          "Contribution",
          "Bonus",
          "Product"
        ],
        "type": "string"
      },
      "HelloAsso.Api.V5.Models.Forms.CustomFieldPublicModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the customField",
            "format": "int32",
            "readOnly": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of possible values if type is a CHOICE_LIST",
            "nullable": true,
            "readOnly": true
          },
          "isRequired": {
            "type": "boolean",
            "description": "True if the custom field must be filled by the user before validating a cart",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FieldType"
          },
          "label": {
            "type": "string",
            "description": "The label to be displayed to the user",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "A custom field can be assigned to a Tier or an ExtraOption\r\nIt is used to give extra information during the reservation of a tier"
      },
      "HelloAsso.Api.V5.Models.Forms.ExtraOptionPublicModel": {
        "type": "object",
        "properties": {
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.CustomFieldPublicModel"
            },
            "description": "List of custom fields to be filled by the user",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "Id",
            "format": "int32"
          },
          "price": {
            "type": "integer",
            "description": "Price of the extraOption, can be free",
            "format": "int32"
          },
          "vatRate": {
            "type": "number",
            "description": "Vat rate if applicable\r\nAmount have to be 0.10 for 10%",
            "format": "double"
          },
          "label": {
            "type": "string",
            "description": "The name of the option",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the option",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean",
            "description": "Additional option is required/mandatory",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "ExtraOptionFullModel"
      },
      "HelloAsso.Api.V5.Models.Forms.FormBasicModel": {
        "type": "object",
        "properties": {
          "formSlug": {
            "type": "string",
            "description": "The form slug",
            "nullable": true
          },
          "formType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
          },
          "url": {
            "type": "string",
            "description": "The form url",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "The organization slug",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A basic form model"
      },
      "HelloAsso.Api.V5.Models.Forms.FormLightModel": {
        "type": "object",
        "properties": {
          "banner": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.DocumentModel"
          },
          "currency": {
            "type": "string",
            "description": "Currency",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Short description (one line)",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The datetime of the activity start",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The datetime of the activity end",
            "format": "date-time",
            "nullable": true
          },
          "logo": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.DocumentModel"
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormState"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "privateTitle": {
            "type": "string",
            "description": "Private Title",
            "nullable": true
          },
          "widgetButtonUrl": {
            "type": "string",
            "description": "Url of the widget button",
            "nullable": true
          },
          "widgetFullUrl": {
            "type": "string",
            "description": "Url of the form widget",
            "nullable": true
          },
          "widgetVignetteHorizontalUrl": {
            "type": "string",
            "description": "Url of the horizontal vignette widget",
            "nullable": true
          },
          "widgetVignetteVerticalUrl": {
            "type": "string",
            "description": "Url of the vertical vignette widget",
            "nullable": true
          },
          "widgetCounterUrl": {
            "type": "string",
            "description": "Url of the counter widget",
            "nullable": true
          },
          "formSlug": {
            "type": "string",
            "description": "The form slug",
            "nullable": true
          },
          "formType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
          },
          "url": {
            "type": "string",
            "description": "The form url",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "The organization slug",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FormLightModel class"
      },
      "HelloAsso.Api.V5.Models.Forms.FormPublicModel": {
        "type": "object",
        "properties": {
          "organizationLogo": {
            "type": "string",
            "description": "Organization Logo",
            "nullable": true
          },
          "organizationName": {
            "type": "string",
            "description": "Organization Name",
            "nullable": true
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.TierPublicModel"
            },
            "description": "Tiers",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "description": "Activity type of the event eg. \"Atelier(s) / Stage(s)\" matching one of the provided type values <a href=\"index#!/Values/Values_Get\"> provided here</a> or a custom value is allowed.",
            "nullable": true
          },
          "activityTypeId": {
            "type": "integer",
            "description": "Activity type identifier",
            "format": "int32"
          },
          "place": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PlaceModel"
          },
          "saleEndDate": {
            "type": "string",
            "description": "The datetime (Inclusive) at which the sales end.\r\nIf null the orders will be available until the end of the campaign.",
            "format": "date-time",
            "nullable": true
          },
          "saleStartDate": {
            "type": "string",
            "description": "The datetime (Inclusive) at which the users can start placing orders.\r\nIf null the orders will be available as soon as the campaign is published.",
            "format": "date-time",
            "nullable": true
          },
          "validityType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.MembershipValidityType"
          },
          "personalizedMessage": {
            "type": "string",
            "description": "A message customized by the organization administrator.",
            "nullable": true
          },
          "banner": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.DocumentModel"
          },
          "currency": {
            "type": "string",
            "description": "Currency",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Short description (one line)",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The datetime of the activity start",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The datetime of the activity end",
            "format": "date-time",
            "nullable": true
          },
          "logo": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.DocumentModel"
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormState"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "privateTitle": {
            "type": "string",
            "description": "Private Title",
            "nullable": true
          },
          "widgetButtonUrl": {
            "type": "string",
            "description": "Url of the widget button",
            "nullable": true
          },
          "widgetFullUrl": {
            "type": "string",
            "description": "Url of the form widget",
            "nullable": true
          },
          "widgetVignetteHorizontalUrl": {
            "type": "string",
            "description": "Url of the horizontal vignette widget",
            "nullable": true
          },
          "widgetVignetteVerticalUrl": {
            "type": "string",
            "description": "Url of the vertical vignette widget",
            "nullable": true
          },
          "widgetCounterUrl": {
            "type": "string",
            "description": "Url of the counter widget",
            "nullable": true
          },
          "formSlug": {
            "type": "string",
            "description": "The form slug",
            "nullable": true
          },
          "formType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
          },
          "url": {
            "type": "string",
            "description": "The form url",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "The organization slug",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "FormPublicModel class"
      },
      "HelloAsso.Api.V5.Models.Forms.FormQuickCreateModel": {
        "type": "object",
        "properties": {
          "formSlug": {
            "type": "string",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "nullable": true
          },
          "publicUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Forms.FormQuickCreateRequest": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "tierList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.TierLightModel"
            },
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "The banner of the form",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of form",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The datetime of the activity end",
            "format": "date-time",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "description": "The logo of the form",
            "nullable": true
          },
          "privateTitle": {
            "type": "string",
            "description": "Private Title : displayed only in the organization back office",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The datetime of the activity start",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "The title of the form. It will be used to generate the url which that can't be changed."
          },
          "activityTypeId": {
            "type": "integer",
            "description": "Activity type identifier, matching one of the provided type values <a href=\"index#!/Values/Values_Get\"> provided here</a>",
            "format": "int32",
            "nullable": true
          },
          "place": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.PlaceModel"
          },
          "saleEndDate": {
            "type": "string",
            "description": "The datetime (Inclusive) at which the sales end.\r\nIf null the orders will be available until the end of the campaign.",
            "format": "date-time",
            "nullable": true
          },
          "saleStartDate": {
            "type": "string",
            "description": "The datetime (Inclusive) at which the users can start placing orders.\r\nIf null the orders will be available as soon as the campaign is published.",
            "format": "date-time",
            "nullable": true
          },
          "validityType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.MembershipValidityType"
          },
          "acceptOpenDonation": {
            "type": "boolean",
            "description": "Whether the user will be allowed to make a single open donation with an order. The amount of the donation is open, but 3 presets can be set in OpenDonationPresetAmount"
          },
          "acceptOpenMonthlyDonation": {
            "type": "boolean",
            "description": "Whether the user will be allowed to make a monthly open donation for donation forms"
          },
          "allowComment": {
            "type": "boolean",
            "description": "allowComment"
          },
          "amountVisible": {
            "type": "boolean",
            "description": "amountVisible"
          },
          "color": {
            "type": "string",
            "description": "The color of the form",
            "nullable": true
          },
          "widgetButtonText": {
            "type": "string",
            "description": "The text displayed in the widget button",
            "nullable": true
          },
          "contact": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.ContactModel"
          },
          "displayContributorName": {
            "type": "boolean",
            "description": "Display contributor name for fundraiser"
          },
          "displayParticipantsCount": {
            "type": "boolean",
            "description": "Indicates that the members count must be displayed on the form."
          },
          "displayRemainingEntries": {
            "type": "boolean",
            "description": "Indicates that the remaining entries must be displayed on the form."
          },
          "financialGoal": {
            "type": "integer",
            "description": "Indicates the financial goal (amount of money raised) for the whole form. Null means no goal.",
            "format": "int64",
            "nullable": true
          },
          "generateMembershipCards": {
            "type": "boolean",
            "description": "Entrust the issuance of membership cards to HelloAsso (automatically sent by email to participants)"
          },
          "generateTickets": {
            "type": "boolean",
            "description": "Entrust the issuance of tickets to HelloAsso (automatically sent by email to participants)"
          },
          "invertDescriptions": {
            "type": "boolean",
            "description": "Allows you to add the long description above the store catalog."
          },
          "labelConditionsAndTermsFile": {
            "type": "string",
            "description": "Label conditions and terms file",
            "nullable": true
          },
          "longDescription": {
            "type": "string",
            "description": "The long description of the form (rich Html)",
            "nullable": true
          },
          "openDonationPresetAmounts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The preset amounts to be shown to the user. Maximum 3 amounts.",
            "nullable": true
          },
          "personalizedMessage": {
            "type": "string",
            "description": "Personalized message for participants",
            "nullable": true
          },
          "projectBeneficiaries": {
            "type": "string",
            "description": "The project beneficiaries of the form (rich Html)",
            "nullable": true
          },
          "projectExpensesDetails": {
            "type": "string",
            "description": "Details of the project expenses (rich Html)",
            "nullable": true
          },
          "projectOwners": {
            "type": "string",
            "description": "Description of the project owners (rich Html)",
            "nullable": true
          },
          "projectTargetCountry": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "3 letter country code",
            "nullable": true
          },
          "allowOrganismPayer": {
            "type": "boolean",
            "description": "Whether users are allowed to contribute to this form through an organism (only for donation and crowdfunding)."
          },
          "allowIndividualPayer": {
            "type": "boolean",
            "description": "Whether user are allowed to personally contribute to this form (only for donation and crowdfunding)."
          },
          "displayVersion": {
            "type": "integer",
            "description": "The form display version (only for donation).",
            "format": "int32",
            "nullable": true
          },
          "maxEntries": {
            "type": "integer",
            "description": "Indicates the maximum available entries for the whole form. Null means unlimited entries.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Forms.TermModel": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Term Date",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "Term Amount",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "TermsModel class"
      },
      "HelloAsso.Api.V5.Models.Forms.TierLightModel": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Forms.TierPublicModel": {
        "type": "object",
        "properties": {
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.CustomFieldPublicModel"
            },
            "description": "List of custom fields to be filled by the user",
            "nullable": true
          },
          "extraOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.ExtraOptionPublicModel"
            },
            "description": "List of available extra options to buy along the tier",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "id",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "description": "label",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "description",
            "nullable": true
          },
          "tierType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.TierType"
          },
          "price": {
            "type": "integer",
            "description": "the Price in cents\r\nif price equals 0 then it is free or there is a MinAmount",
            "format": "int32",
            "nullable": true
          },
          "vatRate": {
            "type": "number",
            "description": "Vat rate if applicable\r\nAmount have to be 0.10 for 10%",
            "format": "double"
          },
          "minAmount": {
            "type": "integer",
            "description": "If set, it means the payment is free to choose, according to the specified minAmount in cents",
            "format": "int32",
            "nullable": true
          },
          "paymentFrequency": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentFrequencyType"
          },
          "maxPerUser": {
            "type": "integer",
            "description": "Max quantity buyable in this cart",
            "format": "int32",
            "nullable": true
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          },
          "saleStartDate": {
            "type": "string",
            "description": "The datetime (Inclusive) at which the users can start buying this tier.\r\nIf null the tier will be available at the start of the event.",
            "format": "date-time",
            "nullable": true
          },
          "saleEndDate": {
            "type": "string",
            "description": "The datetime (Inclusive) at which the tier is no longer available.\r\nIf null the tier will be available until the end of the event.",
            "format": "date-time",
            "nullable": true
          },
          "isEligibleTaxReceipt": {
            "type": "boolean",
            "description": "Whether this is eligible to a deduction"
          },
          "terms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Forms.TermModel"
            },
            "description": "Terms of tier",
            "nullable": true
          },
          "picture": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.DocumentModel"
          },
          "isExcludedFromFormPaymentTerms": {
            "type": "boolean",
            "description": "True means this tier must be paid in the initial payment, false means it can be paid in payment with installments\r\nNull when the form payment terms are disabled or not compatible with the related form",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "TierPublicModel class"
      },
      "HelloAsso.Api.V5.Models.Organization.OrganizationBasicModel": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The organization url",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "The organization slug",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A basic organization model"
      },
      "HelloAsso.Api.V5.Models.Organization.OrganizationLightModel": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "description": "Logo of organization",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of organization",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/HelloAsso.Models.Enums.GlobalRole"
          },
          "city": {
            "type": "string",
            "description": "Organization city",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Organization zip code",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Organization description",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "description": "Last update date of the organization",
            "format": "date-time"
          },
          "categoryJoId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The organization url",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "The organization slug",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "OrganizationLightModel class"
      },
      "HelloAsso.Api.V5.Models.Organization.OrganizationModel": {
        "type": "object",
        "properties": {
          "isAuthenticated": {
            "type": "boolean",
            "description": "The organization is authenticated. Property returned only when asked by an organization admin.",
            "nullable": true
          },
          "isCashInCompliant": {
            "type": "boolean",
            "description": "If transaction can be init on the organization or not.",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "description": "The organization banner",
            "nullable": true
          },
          "fiscalReceiptEligibility": {
            "type": "boolean",
            "description": "The organism can issue fiscal receipts (type ok and has not deactivated it)\r\nMust configure it and be authenticated to become enabled"
          },
          "fiscalReceiptIssuanceEnabled": {
            "type": "boolean",
            "description": "The organism is eligible, has set up his options, and is authenticated."
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.OrganizationType"
          },
          "category": {
            "type": "string",
            "description": "Organization category label",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Organization Address (for authorized applications or if authorized by the organization)",
            "nullable": true
          },
          "geolocation": {
            "$ref": "#/components/schemas/HelloAsso.Models.Shared.GeoLocation"
          },
          "rnaNumber": {
            "type": "string",
            "description": "Unique identifier assigned when creating the association",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "description": "Logo of organization",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of organization",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/HelloAsso.Models.Enums.GlobalRole"
          },
          "city": {
            "type": "string",
            "description": "Organization city",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Organization zip code",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Organization description",
            "nullable": true
          },
          "updateDate": {
            "type": "string",
            "description": "Last update date of the organization",
            "format": "date-time"
          },
          "categoryJoId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "The organization url",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "The organization slug",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "OrganizationsModel class"
      },
      "HelloAsso.Api.V5.Models.OrganizationLegalInformations.OrganizationLegalStructuresModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "legalStructure": {
            "type": "string",
            "nullable": true
          },
          "agreement": {
            "type": "string",
            "nullable": true
          },
          "isFiscalReceiptEligible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationFiscalReceiptTransmitterBody": {
        "type": "object",
        "properties": {
          "isHelloAssoFiscalReceiptTransmitter": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.OrganizationLegalInformations.UpdateOrganizationLegalInformationConfigurationBody": {
        "required": [
          "allowIfiTaxReductions",
          "isColuche",
          "legalStructureId"
        ],
        "type": "object",
        "properties": {
          "legalStructureId": {
            "type": "integer",
            "format": "int32"
          },
          "isColuche": {
            "type": "boolean"
          },
          "allowIfiTaxReductions": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.PartnerStatisticsModel": {
        "type": "object",
        "properties": {
          "linkedOrganizationsCount": {
            "type": "integer",
            "description": "Number of organizations linked to this partner",
            "format": "int32"
          },
          "linkedOrganizationsCollectedAmount": {
            "type": "integer",
            "description": "Collected amount by linked organizations",
            "format": "int64"
          },
          "checkoutCollectedAmount": {
            "type": "integer",
            "description": "Collected amount by All partner checkouts",
            "format": "int64"
          },
          "organizationsUsingCheckout": {
            "type": "integer",
            "description": "Number of organizations using the checkout with this partner",
            "format": "int32"
          },
          "availableOrganizationsAccessTokenCount": {
            "type": "integer",
            "description": "Number of organizations access token obtains by authorize flow",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Partners.PartnerPublicModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the partner",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "Display Name of the partner",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description of the partner",
            "nullable": true
          },
          "url": {
            "type": "string",
            "description": "Website of the partner",
            "nullable": true
          },
          "logo": {
            "type": "string",
            "description": "Logo of the partner : square format",
            "nullable": true
          },
          "logoRectangle": {
            "type": "string",
            "description": "Logo of the partner : rectangle format",
            "nullable": true
          },
          "apiClient": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Accounts.Clients.ApiClientModel"
          },
          "urlNotificationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.ApiNotifications.ApiUrlNotificationModel"
            },
            "description": "Url Notification of the partner",
            "nullable": true
          },
          "partnerStatistics": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.PartnerStatisticsModel"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Payment.PublicPaymentModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The payment id",
            "format": "int32"
          },
          "organizationId": {
            "type": "integer",
            "description": "The Organization id, which the payment was made to",
            "format": "int32"
          },
          "formId": {
            "type": "integer",
            "description": "The form id where the payment was made. Used with FormType",
            "format": "int32",
            "nullable": true
          },
          "formType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
          },
          "amount": {
            "type": "integer",
            "description": "Amount",
            "format": "int32"
          },
          "meansPayment": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
          },
          "cashOutState": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
          },
          "date": {
            "type": "string",
            "description": "The payment Date.",
            "format": "date-time"
          },
          "authorizationDate": {
            "type": "string",
            "description": "If the payment is authorized, this is the date of authorization",
            "format": "date-time",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "description": "Date at which the Order was placed.\r\nImportant for monthly payments or scheduled payments.",
            "format": "date-time"
          },
          "orderId": {
            "type": "integer",
            "description": "The id of the order",
            "format": "int32"
          },
          "fiscalReceiptGenerated": {
            "type": "boolean",
            "description": "Whether a Fiscal receipt document has been generated for this payment or not."
          },
          "payerFirstName": {
            "type": "string",
            "description": "The inputted payer first name, might differs from User firstname, from linked user Id",
            "nullable": true
          },
          "payerLastName": {
            "type": "string",
            "description": "The inputted payer last name,  might differs from User lastname, from linked user Id",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentState"
          },
          "userId": {
            "type": "integer",
            "description": "The user id who initiated the payment",
            "format": "int32",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "description": "The name of the user who initiated the payment. May differ from PayerFirstName",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "description": "The name of the user who initiated the payment. May differ from PayerLastName",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "description": "The email of the user account who initiated the payment.",
            "nullable": true
          },
          "providerTitle": {
            "type": "string",
            "description": "name of the provider",
            "nullable": true
          },
          "installmentNumber": {
            "type": "integer",
            "description": "Indicates the payment number (useful in the case of an order comprising payments with installments)\r\nStarting with 1.",
            "format": "int32",
            "nullable": true
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          },
          "refundOperations": {
            "title": "List<RefundOperationLightModel>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
            },
            "description": "The refund operations for the specific payment.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Payment.RefundOperationModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The refund operation id",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "The amount to refund",
            "format": "int32"
          },
          "cancelOrder": {
            "type": "boolean",
            "description": "Whether the future payments and linked items of this order must be canceled (possible only if the payment is fully refunded)"
          },
          "creationDate": {
            "type": "string",
            "description": "The refund operation creation date",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.OperationState"
          },
          "sendRefundMail": {
            "type": "boolean",
            "description": "Whether a refund mail must be send or not."
          },
          "paymentId": {
            "type": "integer",
            "description": "The payment id",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "RefundOperationModel class"
      },
      "HelloAsso.Api.V5.Models.Statistics.Item": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderLight"
          },
          "payer": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.Payer"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemPayment"
            },
            "description": "Payments linked to this item",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.User"
          },
          "priceCategory": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PriceCategory"
          },
          "minAmount": {
            "type": "integer",
            "description": "Minimum amount that was specified on the tier (in cents)",
            "format": "int32",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemDiscount"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemCustomField"
            },
            "description": "Custom fields related to this item",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemOption"
            },
            "description": "Extra options taken with this item",
            "nullable": true
          },
          "ticketUrl": {
            "type": "string",
            "description": "The Ticket Url",
            "nullable": true
          },
          "qrCode": {
            "type": "string",
            "description": "The item QrCode (for ticket scanning only)",
            "nullable": true
          },
          "membershipCardUrl": {
            "type": "string",
            "description": "The Membership Card Url",
            "nullable": true
          },
          "dayOfLevy": {
            "type": "integer",
            "description": "The day of levy for monthly donation only",
            "format": "int32",
            "nullable": true
          },
          "tierDescription": {
            "type": "string",
            "description": "Tier description",
            "nullable": true
          },
          "tierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "ID of the Item",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "Total item Price in cents (after discount without extra options)",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.TierType"
          },
          "initialAmount": {
            "type": "integer",
            "description": "The raw amount (without reduction)",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.ItemState"
          }
        },
        "additionalProperties": false,
        "description": "An item of an order"
      },
      "HelloAsso.Api.V5.Models.Statistics.ItemCustomField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FieldType"
          },
          "answer": {
            "type": "string",
            "description": "Participant or user answer",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Custom field associated with the item or option"
      },
      "HelloAsso.Api.V5.Models.Statistics.ItemDetail": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderLight"
          },
          "payer": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.Payer"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemPayment"
            },
            "description": "Payments linked to this item",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.User"
          },
          "priceCategory": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PriceCategory"
          },
          "minAmount": {
            "type": "integer",
            "description": "Minimum amount that was specified on the tier (in cents)",
            "format": "int32",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemDiscount"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemCustomField"
            },
            "description": "Custom fields related to this item",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemOption"
            },
            "description": "Extra options taken with this item",
            "nullable": true
          },
          "ticketUrl": {
            "type": "string",
            "description": "The Ticket Url",
            "nullable": true
          },
          "qrCode": {
            "type": "string",
            "description": "The item QrCode (for ticket scanning only)",
            "nullable": true
          },
          "membershipCardUrl": {
            "type": "string",
            "description": "The Membership Card Url",
            "nullable": true
          },
          "dayOfLevy": {
            "type": "integer",
            "description": "The day of levy for monthly donation only",
            "format": "int32",
            "nullable": true
          },
          "tierDescription": {
            "type": "string",
            "description": "Tier description",
            "nullable": true
          },
          "tierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "ID of the Item",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "Total item Price in cents (after discount without extra options)",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.TierType"
          },
          "initialAmount": {
            "type": "integer",
            "description": "The raw amount (without reduction)",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.ItemState"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.ItemDiscount": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The discount code applied on the item",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "The discount amount in cents",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.ItemOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the option",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "Amount of the option in cents",
            "format": "int32"
          },
          "priceCategory": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PriceCategory"
          },
          "isRequired": {
            "type": "boolean",
            "description": "Option is required or optional"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemCustomField"
            },
            "description": "Custom fields related to this option",
            "nullable": true
          },
          "optionId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "ItemOption class"
      },
      "HelloAsso.Api.V5.Models.Statistics.ItemPayment": {
        "type": "object",
        "properties": {
          "cashOutState": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
          },
          "shareAmount": {
            "type": "integer",
            "description": "Amount of the item and extra options payed on this payment term (in cents)",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The ID of the payment",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "Total Amount of the payment (in cents)",
            "format": "int32"
          },
          "amountTip": {
            "type": "integer",
            "description": "Tip Amount of the payment (in cents)",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Date of the payment",
            "format": "date-time"
          },
          "paymentMeans": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
          },
          "installmentNumber": {
            "type": "integer",
            "description": "Indicates the payment number (useful in the case of an order comprising payments with installments)",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentState"
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentType"
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          },
          "paymentOffLineMean": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
          },
          "refundOperations": {
            "title": "List<RefundOperationLightModel>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
            },
            "description": "The refund operations information for the specific payment.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Payment linked to the item"
      },
      "HelloAsso.Api.V5.Models.Statistics.Order": {
        "type": "object",
        "properties": {
          "payer": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.Payer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderItem"
            },
            "description": "All items of the order",
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderPayment"
            },
            "description": "All payments of the order",
            "nullable": true
          },
          "amount": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderAmountModel"
          },
          "id": {
            "type": "integer",
            "description": "The ID of the Order",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "description": "Order creation date",
            "format": "date-time"
          },
          "formSlug": {
            "type": "string",
            "description": "FormSlug (lowercase name of the form without special characters)",
            "nullable": true
          },
          "formType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
          },
          "organizationName": {
            "type": "string",
            "description": "The organization name.",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "OrganizationSlug (lowercase name of the organization without special characters)",
            "nullable": true
          },
          "organizationType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.OrganizationType"
          },
          "organizationIsUnderColucheLaw": {
            "type": "boolean",
            "description": "Whether or not the organization is subject to the coluche law"
          },
          "checkoutIntentId": {
            "type": "integer",
            "description": "Checkout intent Id if available",
            "format": "int32",
            "nullable": true
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.OrderAmountModel": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total amount in cents",
            "format": "int32"
          },
          "vat": {
            "type": "integer",
            "description": "Vat amount in cents",
            "format": "int32"
          },
          "discount": {
            "type": "integer",
            "description": "Discount amount in cents",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.OrderDetail": {
        "type": "object",
        "properties": {
          "payer": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.Payer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderItem"
            },
            "description": "All items of the order",
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderPayment"
            },
            "description": "All payments of the order",
            "nullable": true
          },
          "amount": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderAmountModel"
          },
          "id": {
            "type": "integer",
            "description": "The ID of the Order",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "description": "Order creation date",
            "format": "date-time"
          },
          "formSlug": {
            "type": "string",
            "description": "FormSlug (lowercase name of the form without special characters)",
            "nullable": true
          },
          "formType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
          },
          "organizationName": {
            "type": "string",
            "description": "The organization name.",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "OrganizationSlug (lowercase name of the organization without special characters)",
            "nullable": true
          },
          "organizationType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.OrganizationType"
          },
          "organizationIsUnderColucheLaw": {
            "type": "boolean",
            "description": "Whether or not the organization is subject to the coluche law"
          },
          "checkoutIntentId": {
            "type": "integer",
            "description": "Checkout intent Id if available",
            "format": "int32",
            "nullable": true
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.OrderItem": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.SharePayment"
            },
            "description": "Payments linked to this item and each share between the item and the payment",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.User"
          },
          "priceCategory": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PriceCategory"
          },
          "minAmount": {
            "type": "integer",
            "description": "Minimum amount that was specified on the tier (in cents)",
            "format": "int32",
            "nullable": true
          },
          "discount": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemDiscount"
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemCustomField"
            },
            "description": "Custom fields related to this item",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ItemOption"
            },
            "description": "Extra options taken with this item",
            "nullable": true
          },
          "ticketUrl": {
            "type": "string",
            "description": "The Ticket Url",
            "nullable": true
          },
          "qrCode": {
            "type": "string",
            "description": "The item QrCode (for ticket scanning only)",
            "nullable": true
          },
          "membershipCardUrl": {
            "type": "string",
            "description": "The Membership Card Url",
            "nullable": true
          },
          "dayOfLevy": {
            "type": "integer",
            "description": "The day of levy for monthly donation only",
            "format": "int32",
            "nullable": true
          },
          "tierDescription": {
            "type": "string",
            "description": "Tier description",
            "nullable": true
          },
          "tierId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "ID of the Item",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "Total item Price in cents (after discount without extra options)",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.TierType"
          },
          "initialAmount": {
            "type": "integer",
            "description": "The raw amount (without reduction)",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.ItemState"
          }
        },
        "additionalProperties": false,
        "description": "Item on the order"
      },
      "HelloAsso.Api.V5.Models.Statistics.OrderLight": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the Order",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "description": "Order creation date",
            "format": "date-time"
          },
          "formSlug": {
            "type": "string",
            "description": "FormSlug (lowercase name of the form without special characters)",
            "nullable": true
          },
          "formType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.FormType"
          },
          "organizationName": {
            "type": "string",
            "description": "The organization name.",
            "nullable": true
          },
          "organizationSlug": {
            "type": "string",
            "description": "OrganizationSlug (lowercase name of the organization without special characters)",
            "nullable": true
          },
          "organizationType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.OrganizationType"
          },
          "organizationIsUnderColucheLaw": {
            "type": "boolean",
            "description": "Whether or not the organization is subject to the coluche law"
          },
          "checkoutIntentId": {
            "type": "integer",
            "description": "Checkout intent Id if available",
            "format": "int32",
            "nullable": true
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.OrderPayment": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.ShareItem"
            },
            "description": "Items linked to this payment and each share between the item and the payment",
            "nullable": true
          },
          "cashOutDate": {
            "type": "string",
            "description": "The date of the cash out",
            "format": "date-time",
            "nullable": true
          },
          "cashOutState": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
          },
          "paymentReceiptUrl": {
            "type": "string",
            "description": "The Payment Receipt Url",
            "nullable": true
          },
          "fiscalReceiptUrl": {
            "type": "string",
            "description": "The Fiscal Receipt Url",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The ID of the payment",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "Total Amount of the payment (in cents)",
            "format": "int32"
          },
          "amountTip": {
            "type": "integer",
            "description": "Tip Amount of the payment (in cents)",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Date of the payment",
            "format": "date-time"
          },
          "paymentMeans": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
          },
          "installmentNumber": {
            "type": "integer",
            "description": "Indicates the payment number (useful in the case of an order comprising payments with installments)",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentState"
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentType"
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          },
          "paymentOffLineMean": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
          },
          "refundOperations": {
            "title": "List<RefundOperationLightModel>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
            },
            "description": "The refund operations information for the specific payment.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Payment on the order"
      },
      "HelloAsso.Api.V5.Models.Statistics.Payer": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Gets or Sets Address",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Gets or Sets City",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "Gets or Sets ZipCode",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Gets or Sets Country",
            "nullable": true
          },
          "company": {
            "type": "string",
            "description": "Gets or Sets Company",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "Gets or Sets date of birth",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.Payment": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderLight"
          },
          "payer": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.Payer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.PaymentItem"
            },
            "description": "Items linked to this payment",
            "nullable": true
          },
          "cashOutDate": {
            "type": "string",
            "description": "The date of the cash out",
            "format": "date-time",
            "nullable": true
          },
          "cashOutState": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
          },
          "paymentReceiptUrl": {
            "type": "string",
            "description": "The Payment Receipt Url",
            "nullable": true
          },
          "fiscalReceiptUrl": {
            "type": "string",
            "description": "The Fiscal Receipt Url",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The ID of the payment",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "Total Amount of the payment (in cents)",
            "format": "int32"
          },
          "amountTip": {
            "type": "integer",
            "description": "Tip Amount of the payment (in cents)",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Date of the payment",
            "format": "date-time"
          },
          "paymentMeans": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
          },
          "installmentNumber": {
            "type": "integer",
            "description": "Indicates the payment number (useful in the case of an order comprising payments with installments)",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentState"
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentType"
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          },
          "paymentOffLineMean": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
          },
          "refundOperations": {
            "title": "List<RefundOperationLightModel>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
            },
            "description": "The refund operations information for the specific payment.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.PaymentDetail": {
        "type": "object",
        "properties": {
          "order": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.OrderLight"
          },
          "payer": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.Payer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.PaymentItem"
            },
            "description": "Items linked to this payment",
            "nullable": true
          },
          "cashOutDate": {
            "type": "string",
            "description": "The date of the cash out",
            "format": "date-time",
            "nullable": true
          },
          "cashOutState": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentCashOutState"
          },
          "paymentReceiptUrl": {
            "type": "string",
            "description": "The Payment Receipt Url",
            "nullable": true
          },
          "fiscalReceiptUrl": {
            "type": "string",
            "description": "The Fiscal Receipt Url",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The ID of the payment",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "Total Amount of the payment (in cents)",
            "format": "int32"
          },
          "amountTip": {
            "type": "integer",
            "description": "Tip Amount of the payment (in cents)",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Date of the payment",
            "format": "date-time"
          },
          "paymentMeans": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
          },
          "installmentNumber": {
            "type": "integer",
            "description": "Indicates the payment number (useful in the case of an order comprising payments with installments)",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentState"
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentType"
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          },
          "paymentOffLineMean": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.PaymentMeans"
          },
          "refundOperations": {
            "title": "List<RefundOperationLightModel>",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel"
            },
            "description": "The refund operations information for the specific payment.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.PaymentItem": {
        "type": "object",
        "properties": {
          "shareAmount": {
            "type": "integer",
            "description": "Amount of the payment assigned to the item and its options (in cents)",
            "format": "int32"
          },
          "shareItemAmount": {
            "type": "integer",
            "description": "Amount of the item payed on this payment term (in cents)",
            "format": "int32"
          },
          "shareOptionsAmount": {
            "type": "integer",
            "description": "Amount of all extra options linked to this item and payed on this payment (in cents)",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "ID of the Item",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "Total item Price in cents (after discount without extra options)",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.TierType"
          },
          "initialAmount": {
            "type": "integer",
            "description": "The raw amount (without reduction)",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.ItemState"
          },
          "name": {
            "type": "string",
            "description": "Name of the item paid (relevant for checkout forms)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Item linked to a payment"
      },
      "HelloAsso.Api.V5.Models.Statistics.RefundOperationLightModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The refund operation identifier.",
            "format": "int32"
          },
          "amount": {
            "type": "integer",
            "description": "The amount for this refund.",
            "format": "int32"
          },
          "amountTip": {
            "type": "integer",
            "description": "The amount tip for this refund.",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.OperationState"
          },
          "meta": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Common.MetaModel"
          }
        },
        "additionalProperties": false,
        "description": "The refund operation with the Id, amount, amount tip and the status."
      },
      "HelloAsso.Api.V5.Models.Statistics.ShareItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the order item",
            "format": "int32"
          },
          "shareAmount": {
            "type": "integer",
            "description": "Amount of the payment assigned to the item and its options (in cents)",
            "format": "int32"
          },
          "shareItemAmount": {
            "type": "integer",
            "description": "Amount of the item payed on this payment term (in cents)",
            "format": "int32"
          },
          "shareOptionsAmount": {
            "type": "integer",
            "description": "Amount of all extra options linked to this item and payed on this payment (in cents)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.SharePayment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the payment",
            "format": "int32"
          },
          "shareAmount": {
            "type": "integer",
            "description": "Amount of the item payed on this payment term (in cents)",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Statistics.User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Api.V5.Models.Tags.InternalTagModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Tag Id",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name tag",
            "nullable": true
          },
          "formCount": {
            "type": "integer",
            "description": "Count of times Tag is used by forms",
            "format": "int32",
            "nullable": true
          },
          "organizationCount": {
            "type": "integer",
            "description": "Count of times Tag is used by Organizations",
            "format": "int32",
            "nullable": true
          },
          "tagType": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Enums.TagType"
          },
          "tagParent": {
            "$ref": "#/components/schemas/HelloAsso.Api.V5.Models.Tags.InternalTagModel"
          },
          "amountCollected": {
            "type": "integer",
            "description": "Amount collected by all forms linked to this tag (in cents)",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "InternalTagModel class"
      },
      "HelloAsso.Api.V5.Models.Tags.PublicTagModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name tag",
            "nullable": true
          },
          "score": {
            "type": "number",
            "description": "Tag score : measure tag relevance",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "PublicNameTagModel class"
      },
      "HelloAsso.Core.Accounts.TaxReceipts.OrganizationFiscalReceiptOptionsConfiguration": {
        "type": "object",
        "properties": {
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "cerfaTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "joCategoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "formatOptionModel": {
            "$ref": "#/components/schemas/HelloAsso.Models.Payments.CashIn.FiscalReceipt.FiscalReceiptFormatOption"
          },
          "signatoryModel": {
            "$ref": "#/components/schemas/HelloAsso.Models.Accounts.OrganizationLegalInformations.FiscalReceiptSignatoryModel"
          },
          "addressModel": {
            "$ref": "#/components/schemas/HaTrust.Contract.LegalInformation.Address.AddressDto"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Models.Accounts.OrganizationLegalInformations.FiscalReceiptSignatoryModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "function": {
            "type": "string",
            "nullable": true
          },
          "fileUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Models.Accounts.OrganizationLegalInformations.OrganizationLegalInformationConfiguration": {
        "type": "object",
        "properties": {
          "legalStructureId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isHelloAssoFiscalReceiptTransmitter": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "isColucheLawEnabled": {
            "type": "boolean"
          },
          "isIfiEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Models.Accounts.OrganizationLegalInformations.TaxInformationText": {
        "type": "object",
        "properties": {
          "isColucheLawEnabled": {
            "type": "boolean"
          },
          "isIfiEnabled": {
            "type": "boolean"
          },
          "individualText": {
            "type": "string",
            "nullable": true
          },
          "companyText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Models.Enums.GlobalRole": {
        "enum": [
          "OrganizationAdmin",
          "FormAdmin"
        ],
        "type": "string"
      },
      "HelloAsso.Models.Payments.CashIn.FiscalReceipt.FiscalReceiptFormatOption": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "string",
            "nullable": true
          },
          "root": {
            "type": "string",
            "nullable": true
          },
          "separator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HelloAsso.Models.Shared.GeoLocation": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.helloasso.com/oauth2/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "x-readme": {
    "samples-languages": [
      "shell",
      "php",
      "javascript",
      "python",
      "node"
    ]
  }
}